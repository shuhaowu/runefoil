From 8db98686aa3725bea34581d4ca8a6f46fb076271 Mon Sep 17 00:00:00 2001
From: Shuhao Wu <shuhao@shuhaowu.com>
Date: Sun, 11 Oct 2020 23:36:13 -0400
Subject: [PATCH 4/4] Revert "loot controller: publish loot to redis"

Modified to incorporate changes from 1799c9e593061d2a54932b6b7332f37b081d54fa.
---
 .../service/loottracker/LootTrackerController.java  | 13 -------------
 .../loottracker/LootTrackerControllerTest.java      |  9 +--------
 2 files changed, 1 insertion(+), 21 deletions(-)

diff --git a/http-service/src/main/java/net/runelite/http/service/loottracker/LootTrackerController.java b/http-service/src/main/java/net/runelite/http/service/loottracker/LootTrackerController.java
index 8d09094e8..b8acaac44 100644
--- a/http-service/src/main/java/net/runelite/http/service/loottracker/LootTrackerController.java
+++ b/http-service/src/main/java/net/runelite/http/service/loottracker/LootTrackerController.java
@@ -26,7 +26,6 @@
 package net.runelite.http.service.loottracker;
 
 import com.google.api.client.http.HttpStatusCodes;
-import com.google.gson.Gson;
 import java.io.IOException;
 import java.util.Collection;
 import javax.servlet.http.HttpServletRequest;
@@ -36,7 +35,6 @@ import net.runelite.http.api.loottracker.LootAggregate;
 import net.runelite.http.api.loottracker.LootRecord;
 import net.runelite.http.service.account.AuthFilter;
 import net.runelite.http.service.account.beans.SessionEntry;
-import net.runelite.http.service.util.redis.RedisPool;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;
@@ -45,20 +43,14 @@ import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RequestMethod;
 import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.RestController;
-import redis.clients.jedis.Jedis;
 
 @RestController
 @RequestMapping("/loottracker")
 public class LootTrackerController
 {
-	private static final Gson GSON = RuneLiteAPI.GSON;
-
 	@Autowired
 	private LootTrackerService service;
 
-	@Autowired
-	private RedisPool redisPool;
-
 	@Autowired
 	private AuthFilter auth;
 
@@ -82,11 +74,6 @@ public class LootTrackerController
 			service.store(records, userId);
 		}
 		response.setStatus(HttpStatusCodes.STATUS_CODE_OK);
-
-		try (Jedis jedis = redisPool.getResource())
-		{
-			jedis.publish("drops", GSON.toJson(records));
-		}
 	}
 
 	@GetMapping
diff --git a/http-service/src/test/java/net/runelite/http/service/loottracker/LootTrackerControllerTest.java b/http-service/src/test/java/net/runelite/http/service/loottracker/LootTrackerControllerTest.java
index 685479a63..cf478e548 100644
--- a/http-service/src/test/java/net/runelite/http/service/loottracker/LootTrackerControllerTest.java
+++ b/http-service/src/test/java/net/runelite/http/service/loottracker/LootTrackerControllerTest.java
@@ -36,7 +36,6 @@ import net.runelite.http.api.loottracker.LootRecord;
 import net.runelite.http.api.loottracker.LootRecordType;
 import net.runelite.http.service.account.AuthFilter;
 import net.runelite.http.service.account.beans.SessionEntry;
-import net.runelite.http.service.util.redis.RedisPool;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -55,7 +54,6 @@ import org.springframework.test.context.junit4.SpringRunner;
 import org.springframework.test.web.servlet.MockMvc;
 import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
 import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
-import redis.clients.jedis.Jedis;
 
 @RunWith(SpringRunner.class)
 @WebMvcTest(LootTrackerController.class)
@@ -71,16 +69,11 @@ public class LootTrackerControllerTest
 	@MockBean
 	private AuthFilter authFilter;
 
-	@MockBean
-	private RedisPool redisPool;
-
 	@Before
 	public void before() throws IOException
 	{
 		when(authFilter.handle(any(HttpServletRequest.class), any(HttpServletResponse.class)))
 			.thenReturn(mock(SessionEntry.class));
-
-		when(redisPool.getResource()).thenReturn(mock(Jedis.class));
 	}
 
 	@Test
@@ -100,4 +93,4 @@ public class LootTrackerControllerTest
 
 		verify(lootTrackerService).store(eq(Collections.singletonList(lootRecord)), anyInt());
 	}
-}
\ No newline at end of file
+}
-- 
2.25.1

